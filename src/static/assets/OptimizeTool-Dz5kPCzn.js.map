{"version":3,"file":"OptimizeTool-Dz5kPCzn.js","sources":["../../src/tools/OptimizeTool.jsx"],"sourcesContent":["import React, { useState, useCallback } from 'react'\nimport DisplayAd from '@/components/ads/DisplayAd.jsx';\nimport InArticleAd from '@/components/ads/InArticleAd.jsx';\nimport { Helmet } from 'react-helmet-async'\nimport { Button } from '@/components/ui/button.jsx'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card.jsx'\nimport { Label } from '@/components/ui/label.jsx'\nimport { Slider } from '@/components/ui/slider.jsx'\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select.jsx'\nimport { Zap, Settings, RotateCw } from 'lucide-react'\nimport ResultSection from '../components/ResultSection'\nimport FileUploadSection from '../components/FileUploadSection'\nimport SocialSharingSection from '../components/SocialSharingSection'\nimport TroubleshootingSection from '../components/TroubleshootingSection'\nimport TipsFaqsBestPracticesSection from '../components/TipsFaqsBestPracticesSection'\nimport ToolSeoSection from '../components/ToolSeoSection'\nimport HowToUseSection from '../components/HowToUseSection'\nimport EnhancedTipsSection from '../components/EnhancedTipsSection'\n\n          {/* Mid-content Ad */}\n          <div className=\"my-8 flex justify-center\">\n            <InArticleAd \n              slot=\"8336674411\"\n              className=\"max-w-2xl w-full\"\n            />\n          </div>\nimport ProcessingState from '../components/ProcessingState'\nimport UploadState from '../components/UploadState'\nimport ToolPageLayout from '../components/ToolPageLayout'\n          {/* Bottom Ad - Before value content */}\n          <div className=\"my-8 flex justify-center\">\n            <DisplayAd \n              slot=\"1125232950\"\n              className=\"max-w-3xl w-full\"\n            />\n          </div>\nimport ValueContentSection from '../components/ValueContentSection'\nimport AdsenseAd from '../components/AdsenseAd'\n\n// Unified workflow states: 'upload', 'editing', 'processing', 'result'\nexport default function OptimizeTool() {\n  const [workflowState, setWorkflowState] = useState('upload')\n  const [uploadMethod, setUploadMethod] = useState('file')\n  const [mediaUrl, setMediaUrl] = useState(null)\n  const [isProcessing, setIsProcessing] = useState(false)\n  const [resultUrl, setResultUrl] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [settings, setSettings] = useState({\n    quality: 80,\n    colors: 256,\n    lossy: 20,\n    dither: 'floyd-steinberg',\n    optimize_level: 3\n  })\n\n  // Unified upload handler for file or URL\n  const handleFileUpload = useCallback((files, urlInput = null) => {\n    if ((!files || files.length === 0) && !urlInput) return\n    setErrorMessage(null)\n    setResultUrl(null)\n    let url\n    if (uploadMethod === 'url' && urlInput) {\n      url = urlInput\n    } else {\n      url = URL.createObjectURL(files[0])\n    }\n    setMediaUrl(url)\n    setWorkflowState('editing')\n  }, [uploadMethod])\n\n  // Handle optimize process\n  const handleProcess = useCallback(async () => {\n    if (!mediaUrl) return\n    setErrorMessage(null)\n    setIsProcessing(true)\n    setResultUrl(null)\n    setWorkflowState('processing')\n    try {\n      const formData = new FormData()\n      if (uploadMethod === 'url') {\n        formData.append('url', mediaUrl)\n      } else {\n        const response = await fetch(mediaUrl)\n        const blob = await response.blob()\n        formData.append('file', blob, 'image.gif')\n      }\n      formData.append('quality', settings.quality.toString())\n      formData.append('colors', settings.colors.toString())\n      formData.append('lossy', settings.lossy.toString())\n      formData.append('dither', settings.dither)\n      formData.append('optimize_level', settings.optimize_level.toString())\n      const apiUrl = import.meta.env.VITE_API_URL || 'http://localhost:5001'\n      const response = await fetch(`${apiUrl}/api/optimize`, {\n        method: 'POST',\n        body: formData\n      })\n      if (response.ok) {\n        const data = await response.json()\n        const taskId = data.task_id\n        if (!taskId) throw new Error('No task_id returned from backend.')\n        let status = null\n        let result = null\n        for (let i = 0; i < 60; i++) {\n          const statusResp = await fetch(`${apiUrl}/api/task-status/${taskId}`)\n          if (statusResp.ok) {\n            const statusData = await statusResp.json()\n            status = statusData.state\n            result = statusData.result\n            if ((status === 'SUCCESS' || status === 'Task completed!') && result) {\n              break\n            } else if (status === 'FAILURE') {\n              throw new Error(statusData.error || 'GIF optimization failed.')\n            }\n          }\n          await new Promise(res => setTimeout(res, 1000))\n        }\n        if ((status === 'SUCCESS' || status === 'Task completed!') && result) {\n          // Fetch the actual GIF from /api/download/<result>\n          const downloadResp = await fetch(`${apiUrl}/api/download/${result}`)\n          if (!downloadResp.ok) throw new Error('Failed to fetch result GIF.')\n          const gifBlob = await downloadResp.blob()\n          const url = URL.createObjectURL(gifBlob)\n          setResultUrl({\n            previewUrl: url,\n            downloadUrl: `${apiUrl}/api/download/${result}`\n          })\n          setWorkflowState('result')\n        } else {\n          throw new Error('GIF optimization timed out. Please try again.')\n        }\n      } else {\n        const errorData = await response.json()\n        setErrorMessage(errorData.error || 'An unknown error occurred during processing.')\n        setWorkflowState('editing')\n      }\n    } catch (error) {\n      setErrorMessage(error.message || 'Network error or unexpected issue.')\n      setWorkflowState('editing')\n    } finally {\n      setIsProcessing(false)\n    }\n  }, [uploadMethod, settings, mediaUrl])\n\n  // Reset workflow to upload state\n  const resetWorkflow = () => {\n    setWorkflowState('upload')\n    setMediaUrl(null)\n    setResultUrl(null)\n    setErrorMessage(null)\n    setSettings({\n      quality: 80,\n      colors: 256,\n      lossy: 20,\n      dither: 'floyd-steinberg',\n      optimize_level: 3\n    })\n  }\n\n  // --- Render ---\n  return (\n    <>\n      <ToolPageLayout\n        title=\"Optimize GIF\"\n        description=\"Optimize and compress GIFs online for free. Reduce file size while maintaining quality. Perfect for faster loading and sharing.\"\n        icon={RotateCw}\n        seoProps={{\n          title: \"Optimize GIF - Compress and Optimize GIFs Online | EasyGIFMaker\",\n          description: \"Optimize and compress GIFs online for free. Reduce file size while maintaining quality. Perfect for faster loading and sharing.\",\n          keywords: \"optimize gif, compress gif, reduce gif size, gif optimizer, gif compression, optimize animated gif, gif editor, gif converter, gif maker, free gif maker, online gif maker, high quality gif maker\",\n          canonical: \"https://easygifmaker.com/optimize\"\n        }}\n        howToSteps={[\n          {\n            \"@type\": \"HowToStep\",\n            \"name\": \"Upload GIF\",\n            \"text\": \"Select a GIF file or enter a GIF URL to optimize.\"\n          },\n          {\n            \"@type\": \"HowToStep\",\n            \"name\": \"Choose Optimization Level\",\n            \"text\": \"Select your desired optimization level (light, medium, or heavy compression).\"\n          },\n          {\n            \"@type\": \"HowToStep\",\n            \"name\": \"Preview and Compare\",\n            \"text\": \"Compare the original and optimized versions side by side.\"\n          },\n          {\n            \"@type\": \"HowToStep\",\n            \"name\": \"Download Optimized GIF\",\n            \"text\": \"Download your optimized GIF with reduced file size!\"\n          }\n        ]}\n      >\n        <HowToUseSection\n          title=\"How to Use the GIF Optimizer\"\n          steps={[\n            {\n              title: \"Upload your GIF\",\n              description: \"Select a GIF file or enter a GIF URL to optimize.\"\n            },\n            {\n              title: \"Adjust optimization settings\",\n              description: \"Set quality, colors, and compression level for optimal results.\"\n            },\n            {\n              title: \"Preview and compare\",\n              description: \"See the file size reduction and quality comparison.\"\n            },\n            {\n              title: \"Download optimized GIF\",\n              description: \"Download your optimized GIF with reduced file size!\"\n            }\n          ]}\n        />\n\n  {/* Value content moved to end of page */}\n\n          {/* Upload State */}\n          {workflowState === 'upload' && (\n            <UploadState\n              title=\"Upload GIF to Optimize\"\n              description=\"Select a GIF file or enter a GIF URL to optimize and compress\"\n              errorMessage={errorMessage}\n              uploadMethod={uploadMethod}\n              setUploadMethod={setUploadMethod}\n              onFileSelect={(files) => handleFileUpload(files)}\n              onUrlSubmit={(url) => handleFileUpload(null, url)}\n              isProcessing={isProcessing}\n              supportedFormats=\"Supported formats: GIF only\"\n              accept=\"image/gif\"\n              toolName=\"GIF\"\n              useGradient={false}\n            />\n          )}\n\n          {/* Editing State */}\n          {workflowState === 'editing' && (\n            <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n              {/* GIF Preview */}\n              <div className=\"lg:col-span-2\">\n                <Card className=\"bg-gradient-to-br from-white to-blue-50/30 shadow-lg\">\n                  <CardHeader className=\"pb-4\">\n                    <CardTitle className=\"text-2xl font-bold text-gray-800\">GIF Preview</CardTitle>\n                    <CardDescription className=\"text-gray-600\">\n                      Preview your GIF and see optimization results\n                    </CardDescription>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"bg-gradient-to-br from-gray-50/50 to-blue-50/30 rounded-2xl p-6 mb-6 backdrop-blur-sm\">\n                      <div className=\"text-center\">\n                        <img \n                          src={mediaUrl} \n                          alt=\"GIF Preview\" \n                          className=\"max-w-full h-auto rounded-xl shadow-lg mx-auto\" \n                          style={{ maxHeight: '300px' }}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"flex gap-4\">\n                      <Button onClick={resetWorkflow} variant=\"outline\" className=\"flex-1 bg-white/80 backdrop-blur-sm hover:bg-white transition-all duration-300\">\n                        Upload Different GIF\n                      </Button>\n                      <Button \n                        onClick={handleProcess}\n                        disabled={isProcessing}\n                        className=\"flex-1 bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-105\"\n                      >\n                        {isProcessing ? 'Optimizing...' : 'Optimize GIF'}\n                      </Button>\n                    </div>\n                  </CardContent>\n                </Card>\n              </div>\n              {/* Optimization Settings Panel */}\n              <div>\n                <Card className=\"bg-gradient-to-br from-white to-indigo-50/30 shadow-lg\">\n                  <CardHeader className=\"pb-4\">\n                    <CardTitle className=\"flex items-center gap-3 text-xl font-bold text-gray-800\">\n                      <div className=\"p-2 bg-gradient-to-r from-blue-500 to-purple-500 rounded-lg\">\n                        <Zap className=\"h-5 w-5 text-white\" />\n                      </div>\n                      Optimization Settings\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-6\">\n                      <div className=\"bg-white/60 backdrop-blur-sm rounded-xl p-5 border border-white/20\">\n                        <label htmlFor=\"quality\" className=\"block font-semibold mb-3 text-gray-800 text-base\">\n                          Quality Level\n                          <span className=\"text-sm text-gray-500 ml-2 font-normal\">(1-100)</span>\n                        </label>\n                        <div className=\"flex items-center gap-4\">\n                          <div className=\"flex-1 relative\">\n                            <input\n                              id=\"quality\"\n                              type=\"range\"\n                              min=\"1\"\n                              max=\"100\"\n                              step=\"1\"\n                              value={settings.quality}\n                              onChange={(e) => setSettings({...settings, quality: parseInt(e.target.value, 10)})}\n                              className=\"w-full h-3 bg-gradient-to-r from-red-200 via-yellow-200 to-green-200 rounded-full appearance-none cursor-pointer slider-thumb-blue\"\n                            />\n                            <div className=\"absolute -top-6 left-0 right-0 flex justify-between text-xs text-gray-500\">\n                              <span className=\"font-medium\">Small</span>\n                              <span className=\"font-medium\">High</span>\n                            </div>\n                          </div>\n                          <div className=\"relative\">\n                            <input\n                              type=\"number\"\n                              value={settings.quality}\n                              onChange={e => setSettings({...settings, quality: parseInt(e.target.value, 10)})}\n                              min=\"1\"\n                              max=\"100\"\n                              className=\"w-20 bg-white/90 backdrop-blur-sm rounded-lg px-3 py-2 text-center font-semibold text-base shadow-sm focus:ring-2 focus:ring-blue-500 focus:outline-none border border-white/30\"\n                            />\n                            <div className=\"absolute -bottom-5 left-1/2 transform -translate-x-1/2 text-xs text-gray-500 font-medium\">%</div>\n                          </div>\n                        </div>\n                        <p className=\"text-xs text-gray-600 mt-3 leading-relaxed\">\n                          Controls file size vs quality. Lower values = smaller files, higher values = better quality.\n                        </p>\n                      </div>\n                      \n                      <div className=\"bg-white/60 backdrop-blur-sm rounded-xl p-5 border border-white/20\">\n                        <label htmlFor=\"colors\" className=\"block font-semibold mb-3 text-gray-800 text-base\">\n                          Color Count\n                        </label>\n                        <div className=\"flex items-center gap-4\">\n                          <div className=\"flex-1 relative\">\n                            <input\n                              id=\"colors\"\n                              type=\"range\"\n                              min=\"2\"\n                              max=\"256\"\n                              step=\"2\"\n                              value={settings.colors}\n                              onChange={(e) => setSettings({...settings, colors: parseInt(e.target.value, 10)})}\n                              className=\"w-full h-3 bg-gradient-to-r from-blue-200 via-purple-200 to-pink-200 rounded-full appearance-none cursor-pointer slider-thumb-green\"\n                            />\n                            <div className=\"absolute -top-6 left-0 right-0 flex justify-between text-xs text-gray-500\">\n                              <span className=\"font-medium\">Few</span>\n                              <span className=\"font-medium\">Many</span>\n                            </div>\n                          </div>\n                          <div className=\"relative\">\n                            <input\n                              type=\"number\"\n                              value={settings.colors}\n                              onChange={e => setSettings({...settings, colors: parseInt(e.target.value, 10)})}\n                              min=\"2\"\n                              max=\"256\"\n                              className=\"w-20 bg-white/90 backdrop-blur-sm rounded-lg px-3 py-2 text-center font-semibold text-base shadow-sm focus:ring-2 focus:ring-green-500 focus:outline-none border border-white/30\"\n                            />\n                            <div className=\"absolute -bottom-5 left-1/2 transform -translate-x-1/2 text-xs text-gray-500 font-medium\">colors</div>\n                          </div>\n                        </div>\n                        <p className=\"text-xs text-gray-600 mt-3 leading-relaxed\">\n                          Controls color variety. Fewer colors = smaller files but less visual richness.\n                        </p>\n                      </div>\n                      \n                      <div className=\"bg-white/60 backdrop-blur-sm rounded-xl p-5 border border-white/20\">\n                        <label htmlFor=\"dither\" className=\"block font-semibold mb-3 text-gray-800 text-base\">\n                          Dithering Method\n                        </label>\n                        <Select value={settings.dither} onValueChange={(value) => setSettings({...settings, dither: value})}>\n                          <SelectTrigger className=\"w-full bg-white/80 backdrop-blur-sm\">\n                            <SelectValue placeholder=\"Select dithering method\" />\n                          </SelectTrigger>\n                          <SelectContent>\n                            <SelectItem value=\"floyd-steinberg\">Floyd-Steinberg (Best Quality)</SelectItem>\n                            <SelectItem value=\"atkinson\">Atkinson (Balanced)</SelectItem>\n                            <SelectItem value=\"burkes\">Burkes (Fast)</SelectItem>\n                            <SelectItem value=\"none\">None (No Dithering)</SelectItem>\n                          </SelectContent>\n                        </Select>\n                        <p className=\"text-xs text-gray-600 mt-3 leading-relaxed\">\n                          Dithering improves color quality when reducing colors. Floyd-Steinberg provides the best results.\n                        </p>\n                      </div>\n                      \n                      <div className=\"bg-white/60 backdrop-blur-sm rounded-xl p-5 border border-white/20\">\n                        <label htmlFor=\"optimize-level\" className=\"block font-semibold mb-3 text-gray-800 text-base\">\n                          Optimization Level\n                          <span className=\"text-sm text-gray-500 ml-2 font-normal\">(1-3)</span>\n                        </label>\n                        <div className=\"flex items-center gap-4\">\n                          <div className=\"flex-1 relative\">\n                            <input\n                              id=\"optimize-level\"\n                              type=\"range\"\n                              min=\"1\"\n                              max=\"3\"\n                              step=\"1\"\n                              value={settings.optimize_level}\n                              onChange={(e) => setSettings({...settings, optimize_level: parseInt(e.target.value, 10)})}\n                              className=\"w-full h-3 bg-gradient-to-r from-yellow-200 via-orange-200 to-red-200 rounded-full appearance-none cursor-pointer slider-thumb-orange\"\n                            />\n                            <div className=\"absolute -top-6 left-0 right-0 flex justify-between text-xs text-gray-500\">\n                              <span className=\"font-medium\">Fast</span>\n                              <span className=\"font-medium\">Thorough</span>\n                            </div>\n                          </div>\n                          <div className=\"relative\">\n                            <input\n                              type=\"number\"\n                              value={settings.optimize_level}\n                              onChange={e => setSettings({...settings, optimize_level: parseInt(e.target.value, 10)})}\n                              min=\"1\"\n                              max=\"3\"\n                              className=\"w-20 bg-white/90 backdrop-blur-sm rounded-lg px-3 py-2 text-center font-semibold text-base shadow-sm focus:ring-2 focus:ring-orange-500 focus:outline-none border border-white/30\"\n                            />\n                          </div>\n                        </div>\n                        <p className=\"text-xs text-gray-600 mt-3 leading-relaxed\">\n                          Level 1: Fast optimization. Level 3: Thorough optimization with best compression.\n                        </p>\n                      </div>\n                    </div>\n                    {/* Mid-content Ad */}\n                    <div className=\"my-8 flex justify-center\">\n                      <InArticleAd \n                        slot=\"8336674411\"\n                        className=\"max-w-2xl w-full\"\n                      />\n                    </div>\n                    <EnhancedTipsSection\n\n                      title=\"Pro Tips for Perfect Optimization\"\n                      tips={[\n                        \"<strong>Quality Level</strong> 80-90% provides excellent balance of quality and file size for most GIFs.\",\n                        \"<strong>Color Count</strong> 64-128 colors maintains good variety while reducing file size significantly.\",\n                        \"<strong>Dithering</strong> Floyd-Steinberg provides the best color quality when reducing colors.\",\n                        \"<strong>Optimization Level</strong> Level 3 provides the best compression but takes longer to process.\",\n                        \"<strong>For Social Media:</strong> Use quality 70-80 for faster loading\",\n                        \"<strong>For Websites:</strong> Use quality 85-95 for better appearance\"\n                      ]}\n                    />\n                  </CardContent>\n                </Card>\n              </div>\n            </div>\n          )}\n\n          {/* Processing State */}\n          {workflowState === 'processing' && (\n            <ProcessingState\n              title=\"Optimizing Your GIF\"\n              description=\"Compressing and optimizing your GIF...\"\n            />\n          )}\n\n          {/* Result State */}\n          {workflowState === 'result' && resultUrl && (\n            <ResultSection\n              title=\"Your Optimized GIF is Ready!\"\n              description=\"Your GIF has been successfully optimized with reduced file size.\"\n              imageUrl={resultUrl.previewUrl}\n              downloadFileName=\"optimized.gif\"\n              downloadUrl={resultUrl.downloadUrl}\n              onReset={resetWorkflow}\n            />\n          )}\n\n        <ToolSeoSection\n          icon={Zap}\n          title=\"GIF Optimizer\"\n          description1=\"Speed up your website and social media posts with our powerful GIF optimization tool. Reduce file sizes by up to 80% while maintaining visual quality, making your GIFs load faster and perform better across all platforms.\"\n          description2=\"Our advanced compression algorithms intelligently reduce colors and optimize frame data without sacrificing the visual appeal of your GIFs. Perfect for web developers, content creators, and anyone who wants faster-loading animations.\"\n          features1={[\n            { emoji: \"⚡\", text: \"Reduce file size by up to 80%\" },\n            { emoji: \"🎨\", text: \"Intelligent color optimization\" },\n            { emoji: \"🔧\", text: \"Customizable quality settings\" }\n          ]}\n          features2={[\n            { emoji: \"📊\", text: \"Real-time size comparison\" },\n            { emoji: \"💎\", text: \"Maintain visual quality\" }\n          ]}\n          useCases={[\n            { color: \"bg-yellow-400\", text: \"Optimize GIFs for faster website loading\" },\n            { color: \"bg-green-400\", text: \"Reduce file sizes for social media sharing\" },\n            { color: \"bg-blue-400\", text: \"Compress GIFs for email attachments\" },\n            { color: \"bg-purple-400\", text: \"Optimize GIFs for mobile devices\" }\n          ]}\n        />\n        <AdsenseAd adSlot=\"8336674411\" adFormat=\"fluid\" adLayout=\"in-article\" />\n          \n          <TipsFaqsBestPracticesSection \n            proTips={[\n              {\n                color: \"bg-blue-500\",\n                text: \"Start with quality 80-85 for a good balance of size and quality.\"\n              },\n              {\n                color: \"bg-green-500\",\n                text: \"Use fewer colors (64-128) for simpler GIFs to reduce file size.\"\n              },\n              {\n                color: \"bg-purple-500\",\n                text: \"Test different settings to find the perfect balance for your use case.\"\n              },\n              {\n                color: \"bg-orange-500\",\n                text: \"Compare original and optimized versions to ensure quality meets your needs.\"\n              }\n            ]}\n            faqs={[\n              {\n                question: \"How much can I reduce the file size?\",\n                answer: \"Typically 50-80% reduction depending on the original GIF and settings.\"\n              },\n              {\n                question: \"Will the optimization affect quality?\",\n                answer: \"Some quality loss is expected, but our tool minimizes it while maximizing compression.\"\n              },\n              {\n                question: \"What's the best quality setting?\",\n                answer: \"80-90 for most use cases, 70-80 for social media, 60-70 for email.\"\n              },\n              {\n                question: \"Can I optimize any GIF?\",\n                answer: \"Yes, our tool works with all GIF files regardless of size or complexity.\"\n              }\n            ]}\n            relatedResources={[\n              {\n                href: \"/blog/top-5-gif-optimization-tips\",\n                icon: \"⚡\",\n                text: \"Top 5 GIF Optimization Tips\"\n              },\n              {\n                href: \"/blog/how-to-make-gifs-from-videos\",\n                icon: \"📹\",\n                text: \"How to Make GIFs from Videos\"\n              }\n            ]}\n          />\n\n          <TroubleshootingSection \n            commonIssues={[\n              {\n                color: \"bg-yellow-500\",\n                text: \"If file size reduction is minimal, try lowering the quality setting.\"\n              },\n              {\n                color: \"bg-orange-500\",\n                text: \"If quality loss is too high, increase the quality setting.\"\n              },\n              {\n                color: \"bg-red-500\",\n                text: \"Still having issues?\",\n                link: \"/contact\"\n              }\n            ]}\n            quickFixes={[\n              {\n                icon: \"📊\",\n                text: \"Compare file sizes before and after optimization\"\n              },\n              {\n                icon: \"🎨\",\n                text: \"Adjust color count for better compression\"\n              },\n              {\n                icon: \"⚡\",\n                text: \"Test different quality settings for optimal results\"\n              }\n            ]}\n          />\n\n          <SocialSharingSection \n            title=\"Share Your Optimized GIF!\"\n            description=\"Share your optimized GIF on Instagram, Twitter, TikTok, Facebook, or embed it in your blog or website. Tag us with #EasyGIFMaker for a chance to be featured!\"\n          />\n          {/* Value Content Section (moved to end) */}\n          {/* Bottom Ad - Before value content */}\n          <div className=\"my-8 flex justify-center\">\n            <DisplayAd \n              slot=\"1125232950\"\n              className=\"max-w-3xl w-full\"\n            />\n          </div>\n          <ValueContentSection\n            toolTitle=\"GIF Optimizer\"\n            relatedLinks={[\n              { href: '/blog/gif-optimization-techniques', label: 'GIF Optimization Techniques' },\n              { href: '/blog/gif-accessibility-guide', label: 'GIF Accessibility Guide' }\n            ]}\n            altTools={[\n              { href: '/resize', label: 'Resize GIF', desc: 'Adjust dimensions for platform fit.' },\n              { href: '/crop', label: 'Crop GIF', desc: 'Remove unwanted edges and black bars.' },\n              { href: '/video-to-gif', label: 'Video to GIF', desc: 'Start from MP4 or WebM clips.' }\n            ]}\n          />\n      </ToolPageLayout>\n    </>\n  )\n}"],"names":["OptimizeTool","workflowState","setWorkflowState","useState","uploadMethod","setUploadMethod","mediaUrl","setMediaUrl","isProcessing","setIsProcessing","resultUrl","setResultUrl","errorMessage","setErrorMessage","settings","setSettings","quality","colors","lossy","dither","optimize_level","handleFileUpload","useCallback","files","urlInput","length","url","URL","createObjectURL","handleProcess","async","formData","FormData","append","response","fetch","blob","toString","apiUrl","method","body","ok","taskId","json","task_id","Error","status","result","i","statusResp","statusData","state","error","Promise","res","setTimeout","downloadResp","gifBlob","previewUrl","downloadUrl","errorData","message","resetWorkflow","jsx","Fragment","children","jsxs","ToolPageLayout","title","description","icon","RotateCw","seoProps","keywords","canonical","howToSteps","name","text","HowToUseSection","steps","UploadState","onFileSelect","onUrlSubmit","supportedFormats","accept","toolName","useGradient","className","Card","CardHeader","CardTitle","CardDescription","CardContent","src","alt","style","maxHeight","Button","onClick","variant","disabled","Zap","htmlFor","id","type","min","max","step","value","onChange","e","parseInt","target","Select","onValueChange","SelectTrigger","SelectValue","placeholder","SelectContent","SelectItem","InArticleAd","slot","EnhancedTipsSection","tips","ProcessingState","ResultSection","imageUrl","downloadFileName","onReset","ToolSeoSection","description1","description2","features1","emoji","features2","useCases","color","AdsenseAd","adSlot","adFormat","adLayout","TipsFaqsBestPracticesSection","proTips","faqs","question","answer","relatedResources","href","TroubleshootingSection","commonIssues","link","quickFixes","SocialSharingSection","DisplayAd","ValueContentSection","toolTitle","relatedLinks","label","altTools","desc"],"mappings":"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"}