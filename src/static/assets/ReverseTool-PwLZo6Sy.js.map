{"version":3,"file":"ReverseTool-PwLZo6Sy.js","sources":["../../src/tools/ReverseTool.jsx"],"sourcesContent":["import React, { useState, useCallback } from 'react'\nimport { Button } from '@/components/ui/button.jsx'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card.jsx'\nimport { RefreshCcw } from 'lucide-react'\nimport ResultSection from '../components/ResultSection'\nimport SocialSharingSection from '../components/SocialSharingSection'\nimport TroubleshootingSection from '../components/TroubleshootingSection'\nimport TipsFaqsBestPracticesSection from '../components/TipsFaqsBestPracticesSection'\nimport ToolSeoSection from '../components/ToolSeoSection'\nimport HowToUseSection from '../components/HowToUseSection'\nimport EnhancedTipsSection from '../components/EnhancedTipsSection'\nimport ProcessingState from '../components/ProcessingState'\nimport UploadState from '../components/UploadState'\nimport ToolPageLayout from '../components/ToolPageLayout'\nimport ValueContentSection from '../components/ValueContentSection'\nimport AdsenseAd from '../components/AdsenseAd'\n\nexport default function ReverseTool() {\n  const [workflowState, setWorkflowState] = useState('upload')\n  const [uploadMethod, setUploadMethod] = useState('file')\n  const [mediaUrl, setMediaUrl] = useState(null)\n  const [isProcessing, setIsProcessing] = useState(false)\n  const [resultUrl, setResultUrl] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  const handleFileUpload = useCallback((files, urlInput = null) => {\n    if ((!files || files.length === 0) && !urlInput) return\n    setErrorMessage(null)\n    setResultUrl(null)\n    let url\n    if (uploadMethod === 'url' && urlInput) {\n      url = urlInput\n    } else {\n      url = URL.createObjectURL(files[0])\n    }\n    setMediaUrl(url)\n    setWorkflowState('editing')\n  }, [uploadMethod])\n\n  const handleProcess = useCallback(async () => {\n    if (!mediaUrl) return\n    setErrorMessage(null)\n    setIsProcessing(true)\n    setResultUrl(null)\n    setWorkflowState('processing')\n    try {\n      const formData = new FormData()\n      if (uploadMethod === 'url') {\n        formData.append('url', mediaUrl)\n      } else {\n        const response = await fetch(mediaUrl)\n        const blob = await response.blob()\n        formData.append('file', blob, 'image.gif')\n      }\n      const apiUrl = import.meta.env.VITE_API_URL || 'http://localhost:5001'\n      const response = await fetch(`${apiUrl}/api/reverse`, {\n        method: 'POST',\n        body: formData\n      })\n      if (response.ok) {\n        const data = await response.json()\n        const taskId = data.task_id\n        if (!taskId) throw new Error('No task_id returned from backend.')\n        let status = null\n        let result = null\n        for (let i = 0; i < 60; i++) {\n          const statusResp = await fetch(`${apiUrl}/api/task-status/${taskId}`)\n          if (statusResp.ok) {\n            const statusData = await statusResp.json()\n            status = statusData.status || statusData.state\n            result = statusData.result\n            if ((status === 'SUCCESS' || status === 'Task completed!') && result) {\n              break\n            } else if (status === 'FAILURE') {\n              throw new Error(statusData.error || 'GIF reverse failed.')\n            }\n          }\n          await new Promise(res => setTimeout(res, 1000))\n        }\n        if ((status === 'SUCCESS' || status === 'Task completed!') && result) {\n          const downloadResp = await fetch(`${apiUrl}/api/download/${result}`)\n          if (!downloadResp.ok) throw new Error('Failed to fetch result GIF.')\n          const gifBlob = await downloadResp.blob()\n          const url = URL.createObjectURL(gifBlob)\n          setResultUrl({\n            previewUrl: url,\n            downloadUrl: `${apiUrl}/api/download/${result}`\n          })\n          setWorkflowState('result')\n        } else {\n          throw new Error('GIF reverse timed out. Please try again.')\n        }\n      } else {\n        const errorData = await response.json()\n        setErrorMessage(errorData.error || 'An unknown error occurred during processing.')\n        setWorkflowState('editing')\n      }\n    } catch (error) {\n      setErrorMessage(error.message || 'Network error or unexpected issue.')\n      setWorkflowState('editing')\n    } finally {\n      setIsProcessing(false)\n    }\n  }, [uploadMethod, mediaUrl])\n\n  const resetWorkflow = () => {\n    setWorkflowState('upload')\n    setMediaUrl(null)\n    setResultUrl(null)\n    setErrorMessage(null)\n  }\n\n  return (\n    <>\n      <ToolPageLayout\n        title=\"Reverse GIF\"\n        description=\"Reverse the playback direction of animated GIFs online for free.\"\n        icon={RefreshCcw}\n        seoProps={{\n          title: 'Reverse GIF - Play GIFs Backwards Online | EasyGIFMaker',\n          description: 'Reverse the playback of animated GIFs online for free. Upload a GIF or paste a URL to reverse its animation direction instantly.',\n          keywords: 'reverse gif, play gif backwards, gif reverser, reverse animation, gif editor',\n          canonical: 'https://easygifmaker.com/reverse'\n        }}\n        howToSteps={[\n          { '@type': 'HowToStep', name: 'Upload GIF', text: 'Select a GIF file or enter a GIF URL.' },\n          { '@type': 'HowToStep', name: 'Reverse GIF', text: 'Click Reverse GIF to flip the animation.' },\n          { '@type': 'HowToStep', name: 'Download', text: 'Download your reversed GIF.' }\n        ]}\n      >\n        <HowToUseSection\n          title=\"How to Use the GIF Reverser\"\n          steps={[\n            { title: 'Upload your GIF', description: 'Select a GIF file or enter a GIF URL.' },\n            { title: 'Preview', description: 'Check the animation before reversing.' },\n            { title: 'Reverse the GIF', description: 'Click Reverse GIF to flip the playback.' },\n            { title: 'Download', description: 'Save the reversed GIF.' }\n          ]}\n        />\n\n        {workflowState === 'upload' && (\n          <UploadState\n            title=\"Upload GIF to Reverse\"\n            description=\"Select a GIF file or enter a GIF URL to reverse its playback.\"\n            errorMessage={errorMessage}\n            uploadMethod={uploadMethod}\n            setUploadMethod={setUploadMethod}\n            onFileSelect={(files) => handleFileUpload(files)}\n            onUrlSubmit={(url) => handleFileUpload(null, url)}\n            isProcessing={isProcessing}\n            supportedFormats=\"Supported formats: GIF only\"\n            accept=\"image/gif\"\n            toolName=\"GIF\"\n            useGradient={false}\n          />\n        )}\n\n        {workflowState === 'editing' && mediaUrl && (\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n            <div className=\"lg:col-span-2\">\n              <Card className=\"bg-gradient-to-br from-white to-blue-50/30 shadow-lg\">\n                <CardHeader className=\"pb-4\">\n                  <CardTitle className=\"text-2xl font-bold text-gray-800\">GIF Preview</CardTitle>\n                  <CardDescription className=\"text-gray-600\">\n                    Preview your GIF before reversing\n                  </CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"bg-gradient-to-br from-gray-50/50 to-blue-50/30 rounded-2xl p-6 mb-6 backdrop-blur-sm\">\n                    <div className=\"text-center\">\n                      <img\n                        src={mediaUrl}\n                        alt=\"GIF Preview\"\n                        className=\"max-w-full h-auto rounded-xl shadow-lg mx-auto\"\n                        style={{ maxHeight: '300px' }}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"flex gap-4\">\n                    <Button onClick={resetWorkflow} variant=\"outline\" className=\"flex-1 bg-white/80 backdrop-blur-sm hover:bg-white transition-all duration-300\">\n                      Upload Different GIF\n                    </Button>\n                    <Button\n                      onClick={handleProcess}\n                      disabled={isProcessing}\n                      className=\"flex-1 bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-105\"\n                    >\n                      {isProcessing ? 'Reversing...' : 'Reverse GIF'}\n                    </Button>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n            <div>\n              <EnhancedTipsSection\n                title=\"Tips for Better Reversed GIFs\"\n                tips={[\n                  'Use reversed GIFs to create boomerang-style effects.',\n                  'Shorter GIFs reverse faster and smoother.',\n                  'Combine forward and reversed clips for creative loops.'\n                ]}\n              />\n            </div>\n          </div>\n        )}\n\n        {workflowState === 'processing' && (\n          <ProcessingState\n            title=\"Reversing GIF...\"\n            description=\"Please wait while we reverse your GIF.\"\n          />\n        )}\n\n        {workflowState === 'result' && resultUrl && (\n          <ResultSection\n            title=\"Your Reversed GIF is Ready!\"\n            description=\"Download your reversed GIF below.\"\n            imageUrl={resultUrl.previewUrl}\n            downloadFileName=\"reversed.gif\"\n            downloadUrl={resultUrl.downloadUrl}\n            onReset={resetWorkflow}\n          />\n        )}\n\n        <ToolSeoSection\n          icon={RefreshCcw}\n          title=\"Reverse GIF\"\n          description1=\"Reverse the playback direction of your GIFs with a single click. Perfect for creating boomerang-style animations or playing scenes backward.\"\n          description2=\"Our free tool processes GIFs entirely in the cloud and keeps your files private. No registration required.\"\n          features1={[\n            { emoji: '↩️', text: 'Reverse GIF playback' },\n            { emoji: '🎞️', text: 'Supports animated GIF files' },\n            { emoji: '⚡', text: 'Fast processing in the cloud' }\n          ]}\n          features2={[\n            { emoji: '🔄', text: 'Loop seamlessly in reverse' },\n            { emoji: '🔒', text: 'We never store your files' }\n          ]}\n          useCases={[\n            { color: 'bg-blue-400', text: 'Create boomerang-style GIFs' },\n            { color: 'bg-green-400', text: 'Play moments backward for effect' },\n            { color: 'bg-purple-400', text: 'Make fun reversed reaction GIFs' }\n          ]}\n        />\n\n        <AdsenseAd adSlot=\"8336674411\" adFormat=\"fluid\" adLayout=\"in-article\" />\n\n        <TipsFaqsBestPracticesSection\n          proTips={[\n            { color: 'bg-blue-500', text: 'Shorter GIFs reverse faster and more smoothly.' },\n            { color: 'bg-green-500', text: 'Use reversed clips to create engaging loops.' },\n            { color: 'bg-purple-500', text: 'Combine forward and reverse for boomerang effects.' }\n          ]}\n          faqs={[\n            { question: 'Does reversing change file size?', answer: 'The file size remains similar to the original.' },\n            { question: 'Will the GIF loop backwards?', answer: 'Yes, the animation plays from last frame to first.' },\n            { question: 'Can I reverse very large GIFs?', answer: 'Large files may take longer; try to keep under 200MB.' }\n          ]}\n          relatedResources={[\n            { href: '/blog/top-5-gif-optimization-tips', icon: '⚡', text: 'Top 5 GIF Optimization Tips' },\n            { href: '/blog/how-to-make-gifs-from-videos', icon: '📹', text: 'How to Make GIFs from Videos' }\n          ]}\n        />\n\n        <TroubleshootingSection\n          commonIssues={[\n            { color: 'bg-yellow-500', text: 'Ensure the uploaded file is a valid GIF.' },\n            { color: 'bg-orange-500', text: 'If processing takes too long, try a smaller file.' },\n            { color: 'bg-red-500', text: 'Still having issues?', link: '/contact' }\n          ]}\n          quickFixes={[\n            { icon: '🔁', text: 'Re-upload the GIF and try again' },\n            { icon: '⏱️', text: 'Use shorter clips for quicker results' },\n            { icon: '📥', text: 'Download the result to verify playback' }\n          ]}\n        />\n\n        <SocialSharingSection\n          title=\"Share Your Reversed GIF!\"\n          description=\"Share your reversed GIF on social media. Tag us with #EasyGIFMaker.\"\n        />\n\n        <ValueContentSection\n          toolTitle=\"Reverse GIF\"\n          relatedLinks={[\n            { href: '/blog/ultimate-guide-to-viral-gifs', label: 'Ultimate Guide to Viral GIFs' },\n            { href: '/blog/gif-optimization-techniques', label: 'GIF Optimization Techniques' }\n          ]}\n          altTools={[\n            { href: '/gif-maker', label: 'GIF Maker', desc: 'Create animated GIFs from images.' },\n            { href: '/video-to-gif', label: 'Video to GIF', desc: 'Convert video clips to GIFs.' },\n            { href: '/add-text', label: 'Add Text to GIF', desc: 'Add captions and watermarks.' }\n          ]}\n        />\n      </ToolPageLayout>\n    </>\n  )\n}\n\n"],"names":["ReverseTool","workflowState","setWorkflowState","useState","uploadMethod","setUploadMethod","mediaUrl","setMediaUrl","isProcessing","setIsProcessing","resultUrl","setResultUrl","errorMessage","setErrorMessage","handleFileUpload","useCallback","files","urlInput","length","url","URL","createObjectURL","handleProcess","async","formData","FormData","append","response","fetch","blob","apiUrl","method","body","ok","taskId","json","task_id","Error","status","result","i","statusResp","statusData","state","error","Promise","res","setTimeout","downloadResp","gifBlob","previewUrl","downloadUrl","errorData","message","resetWorkflow","jsx","Fragment","children","jsxs","ToolPageLayout","title","description","icon","RefreshCcw","seoProps","keywords","canonical","howToSteps","name","text","HowToUseSection","steps","UploadState","onFileSelect","onUrlSubmit","supportedFormats","accept","toolName","useGradient","className","Card","CardHeader","CardTitle","CardDescription","CardContent","src","alt","style","maxHeight","Button","onClick","variant","disabled","EnhancedTipsSection","tips","ProcessingState","ResultSection","imageUrl","downloadFileName","onReset","ToolSeoSection","description1","description2","features1","emoji","features2","useCases","color","AdsenseAd","adSlot","adFormat","adLayout","TipsFaqsBestPracticesSection","proTips","faqs","question","answer","relatedResources","href","TroubleshootingSection","commonIssues","link","quickFixes","SocialSharingSection","ValueContentSection","toolTitle","relatedLinks","label","altTools","desc"],"mappings":"umBAiBA,SAAwBA,IACtB,MAAOC,EAAeC,GAAoBC,EAAAA,SAAS,WAC5CC,EAAcC,GAAmBF,EAAAA,SAAS,SAC1CG,EAAUC,GAAeJ,EAAAA,SAAS,OAClCK,EAAcC,GAAmBN,EAAAA,UAAS,IAC1CO,EAAWC,GAAgBR,EAAAA,SAAS,OACpCS,EAAcC,GAAmBV,EAAAA,SAAS,MAE3CW,EAAmBC,EAAAA,YAAY,CAACC,EAAOC,EAAW,QACtD,KAAMD,GAA0B,IAAjBA,EAAME,QAAkBD,GAAU,OAGjD,IAAIE,EAFJN,EAAgB,MAChBF,EAAa,MAGXQ,EADmB,QAAjBf,GAA0Ba,EACtBA,EAEAG,IAAIC,gBAAgBL,EAAM,IAElCT,EAAYY,GACZjB,EAAiB,YAChB,CAACE,IAEEkB,EAAgBP,EAAAA,YAAYQ,UAChC,GAAKjB,EAAL,CACAO,EAAgB,MAChBJ,GAAgB,GAChBE,EAAa,MACbT,EAAiB,cACjB,IACE,MAAMsB,EAAW,IAAIC,SACrB,GAAqB,QAAjBrB,EACFoB,EAASE,OAAO,MAAOpB,OAClB,CACL,MAAMqB,QAAiBC,MAAMtB,GACvBuB,QAAaF,EAASE,OAC5BL,EAASE,OAAO,OAAQG,EAAM,YAChC,CACA,MAAMC,EAAyC,wBACzCH,QAAiBC,MAAM,GAAGE,gBAAsB,CACpDC,OAAQ,OACRC,KAAMR,IAER,GAAIG,EAASM,GAAI,CACf,MACMC,SADaP,EAASQ,QACRC,QACpB,IAAKF,EAAQ,MAAM,IAAIG,MAAM,qCAC7B,IAAIC,EAAS,KACTC,EAAS,KACb,IAAA,IAASC,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,MAAMC,QAAmBb,MAAM,GAAGE,qBAA0BI,KAC5D,GAAIO,EAAWR,GAAI,CACjB,MAAMS,QAAmBD,EAAWN,OAGpC,GAFAG,EAASI,EAAWJ,QAAUI,EAAWC,MACzCJ,EAASG,EAAWH,QACJ,YAAXD,GAAmC,oBAAXA,IAAiCC,EAC5D,MACF,GAAsB,YAAXD,EACT,MAAM,IAAID,MAAMK,EAAWE,OAAS,sBAExC,OACM,IAAIC,QAAQC,GAAOC,WAAWD,EAAK,KAC3C,CACA,GAAgB,YAAXR,GAAmC,oBAAXA,IAAiCC,EAW5D,MAAM,IAAIF,MAAM,4CAXoD,CACpE,MAAMW,QAAqBpB,MAAM,GAAGE,kBAAuBS,KAC3D,IAAKS,EAAaf,GAAI,MAAM,IAAII,MAAM,+BACtC,MAAMY,QAAgBD,EAAanB,OAC7BV,EAAMC,IAAIC,gBAAgB4B,GAChCtC,EAAa,CACXuC,WAAY/B,EACZgC,YAAa,GAAGrB,kBAAuBS,MAEzCrC,EAAiB,SACnB,CAGF,KAAO,CACL,MAAMkD,QAAkBzB,EAASQ,OACjCtB,EAAgBuC,EAAUR,OAAS,gDACnC1C,EAAiB,UACnB,CACF,OAAS0C,GACP/B,EAAgB+B,EAAMS,SAAW,sCACjCnD,EAAiB,UACnB,CAAA,QACEO,GAAgB,EAClB,CA9De,GA+Dd,CAACL,EAAcE,IAEZgD,EAAgB,KACpBpD,EAAiB,UACjBK,EAAY,MACZI,EAAa,MACbE,EAAgB,OAGlB,OACE0C,MAAAC,EAAAA,SAAA,CACEC,SAAAC,EAAAA,KAACC,EAAA,CACCC,MAAM,cACNC,YAAY,mEACZC,KAAMC,EACNC,SAAU,CACRJ,MAAO,0DACPC,YAAa,mIACbI,SAAU,+EACVC,UAAW,oCAEbC,WAAY,CACV,CAAE,QAAS,YAAaC,KAAM,aAAcC,KAAM,yCAClD,CAAE,QAAS,YAAaD,KAAM,cAAeC,KAAM,4CACnD,CAAE,QAAS,YAAaD,KAAM,WAAYC,KAAM,gCAGlDZ,SAAA,CAAAF,EAAAA,IAACe,EAAA,CACCV,MAAM,8BACNW,MAAO,CACL,CAAEX,MAAO,kBAAmBC,YAAa,yCACzC,CAAED,MAAO,UAAWC,YAAa,yCACjC,CAAED,MAAO,kBAAmBC,YAAa,2CACzC,CAAED,MAAO,WAAYC,YAAa,6BAInB,WAAlB5D,GACCsD,EAAAA,IAACiB,EAAA,CACCZ,MAAM,wBACNC,YAAY,gEACZjD,eACAR,eACAC,kBACAoE,aAAezD,GAAUF,EAAiBE,GAC1C0D,YAAcvD,GAAQL,EAAiB,KAAMK,GAC7CX,eACAmE,iBAAiB,8BACjBC,OAAO,YACPC,SAAS,MACTC,aAAa,IAIE,YAAlB7E,GAA+BK,GAC9BoD,EAAAA,KAAC,MAAA,CAAIqB,UAAU,wCACbtB,SAAA,CAAAF,EAAAA,IAAC,OAAIwB,UAAU,gBACbtB,SAAAC,EAAAA,KAACsB,EAAA,CAAKD,UAAU,uDACdtB,SAAA,CAAAC,EAAAA,KAACuB,EAAA,CAAWF,UAAU,OACpBtB,SAAA,OAACyB,EAAA,CAAUH,UAAU,mCAAmCtB,SAAA,sBACvD0B,EAAA,CAAgBJ,UAAU,gBAAgBtB,SAAA,gDAI5C2B,EAAA,CACC3B,SAAA,CAAAF,EAAAA,IAAC,OAAIwB,UAAU,wFACbtB,SAAAF,MAAC,MAAA,CAAIwB,UAAU,cACbtB,SAAAF,EAAAA,IAAC,MAAA,CACC8B,IAAK/E,EACLgF,IAAI,cACJP,UAAU,iDACVQ,MAAO,CAAEC,UAAW,eAI1B9B,EAAAA,KAAC,MAAA,CAAIqB,UAAU,aACbtB,SAAA,CAAAF,EAAAA,IAACkC,GAAOC,QAASpC,EAAeqC,QAAQ,UAAUZ,UAAU,iFAAiFtB,SAAA,yBAG7IF,EAAAA,IAACkC,EAAA,CACCC,QAASpE,EACTsE,SAAUpF,EACVuE,UAAU,yLAETtB,WAAe,eAAiB,iCAM1C,MAAA,CACCA,SAAAF,EAAAA,IAACsC,EAAA,CACCjC,MAAM,gCACNkC,KAAM,CACJ,uDACA,4CACA,iEAOS,eAAlB7F,GACCsD,EAAAA,IAACwC,EAAA,CACCnC,MAAM,mBACNC,YAAY,2CAIG,WAAlB5D,GAA8BS,GAC7B6C,EAAAA,IAACyC,EAAA,CACCpC,MAAM,8BACNC,YAAY,oCACZoC,SAAUvF,EAAUwC,WACpBgD,iBAAiB,eACjB/C,YAAazC,EAAUyC,YACvBgD,QAAS7C,IAIbC,EAAAA,IAAC6C,EAAA,CACCtC,KAAMC,EACNH,MAAM,cACNyC,aAAa,+IACbC,aAAa,6GACbC,UAAW,CACT,CAAEC,MAAO,KAAMnC,KAAM,wBACrB,CAAEmC,MAAO,MAAOnC,KAAM,+BACtB,CAAEmC,MAAO,IAAKnC,KAAM,iCAEtBoC,UAAW,CACT,CAAED,MAAO,KAAMnC,KAAM,8BACrB,CAAEmC,MAAO,KAAMnC,KAAM,8BAEvBqC,SAAU,CACR,CAAEC,MAAO,cAAetC,KAAM,+BAC9B,CAAEsC,MAAO,eAAgBtC,KAAM,oCAC/B,CAAEsC,MAAO,gBAAiBtC,KAAM,4CAInCuC,EAAA,CAAUC,OAAO,aAAaC,SAAS,QAAQC,SAAS,eAEzDxD,EAAAA,IAACyD,EAAA,CACCC,QAAS,CACP,CAAEN,MAAO,cAAetC,KAAM,kDAC9B,CAAEsC,MAAO,eAAgBtC,KAAM,gDAC/B,CAAEsC,MAAO,gBAAiBtC,KAAM,uDAElC6C,KAAM,CACJ,CAAEC,SAAU,mCAAoCC,OAAQ,kDACxD,CAAED,SAAU,+BAAgCC,OAAQ,sDACpD,CAAED,SAAU,iCAAkCC,OAAQ,0DAExDC,iBAAkB,CAChB,CAAEC,KAAM,oCAAqCxD,KAAM,IAAKO,KAAM,+BAC9D,CAAEiD,KAAM,qCAAsCxD,KAAM,KAAMO,KAAM,mCAIpEd,EAAAA,IAACgE,EAAA,CACCC,aAAc,CACZ,CAAEb,MAAO,gBAAiBtC,KAAM,4CAChC,CAAEsC,MAAO,gBAAiBtC,KAAM,qDAChC,CAAEsC,MAAO,aAActC,KAAM,uBAAwBoD,KAAM,aAE7DC,WAAY,CACV,CAAE5D,KAAM,KAAMO,KAAM,mCACpB,CAAEP,KAAM,KAAMO,KAAM,yCACpB,CAAEP,KAAM,KAAMO,KAAM,6CAIxBd,EAAAA,IAACoE,EAAA,CACC/D,MAAM,2BACNC,YAAY,wEAGdN,EAAAA,IAACqE,EAAA,CACCC,UAAU,cACVC,aAAc,CACZ,CAAER,KAAM,qCAAsCS,MAAO,gCACrD,CAAET,KAAM,oCAAqCS,MAAO,gCAEtDC,SAAU,CACR,CAAEV,KAAM,aAAcS,MAAO,YAAaE,KAAM,qCAChD,CAAEX,KAAM,gBAAiBS,MAAO,eAAgBE,KAAM,gCACtD,CAAEX,KAAM,YAAaS,MAAO,kBAAmBE,KAAM,uCAMjE"}